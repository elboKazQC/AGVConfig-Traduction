#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Synchronise en lot tous les fichiers JSON fran√ßais d'un r√©pertoire avec leurs
√©quivalents anglais et espagnols.

Usage
-----
```
python sync_all.py [chemin_du_repertoire] [--force-retranslate]
```

- *chemin_du_repertoire* : R√©pertoire racine contenant les fichiers JSON
  (par d√©faut ``../JSON``).
- ``--force-retranslate`` : Force la retraduction m√™me si une traduction est
  d√©j√† pr√©sente.
"""

import os
import sys
import json
import argparse
from sync_one import sync_file

def find_json_files(directory):
    """
    Trouve tous les fichiers JSON fran√ßais dans le r√©pertoire et ses sous-r√©pertoires.
    """
    json_files = []
    for root, dirs, files in os.walk(directory):
        for file in files:
            if file.endswith('_fr.json'):
                json_files.append(os.path.join(root, file))
    return json_files

def main():
    """Point d'entr√©e principal du script."""
    script_dir = os.path.dirname(os.path.abspath(__file__))
    default_dir = os.path.join(script_dir, '..', 'JSON')

    parser = argparse.ArgumentParser(
        description='Synchronise tous les fichiers JSON d\'un r√©pertoire',
        epilog='Exemple: python sync_all.py ./JSON --force-retranslate'
    )
    parser.add_argument(
        'directory', nargs='?', default=default_dir,
        help='R√©pertoire contenant les fichiers JSON (par d√©faut ../JSON)'
    )
    parser.add_argument(
        '--force', '--force-retranslate', dest='force', action='store_true',
        help='Force la retraduction m√™me si une traduction existe'
    )

    args = parser.parse_args()
    base_dir = args.directory

    if not os.path.exists(base_dir):
        print(f"‚ùå R√©pertoire JSON introuvable : {base_dir}")
        sys.exit(1)

    print(f"üîç Recherche des fichiers JSON dans : {base_dir}")

    # Trouver tous les fichiers JSON fran√ßais
    french_files = find_json_files(base_dir)

    if not french_files:
        print("‚ùå Aucun fichier JSON fran√ßais trouv√©")
        sys.exit(1)

    print(f"üìÅ {len(french_files)} fichiers JSON fran√ßais trouv√©s")

    success_count = 0
    error_count = 0

    if args.force:
        print("‚ö° Mode retraduction forc√©e activ√©")

    # Synchroniser chaque fichier
    for i, french_file in enumerate(french_files, 1):
        print(f"\nüîÑ [{i}/{len(french_files)}] Traitement de {os.path.basename(french_file)}")

        try:
            if sync_file(french_file, force_retranslate=args.force):
                success_count += 1
            else:
                error_count += 1
        except Exception as e:
            print(f"‚ùå Erreur lors du traitement de {french_file}: {e}")
            error_count += 1

    print(f"\nüìä R√©sum√© de la synchronisation :")
    print(f"   ‚úÖ R√©ussies : {success_count}")
    print(f"   ‚ùå Erreurs  : {error_count}")
    print(f"   üìÅ Total    : {len(french_files)}")

    if error_count == 0:
        print("üéâ Synchronisation globale termin√©e avec succ√®s !")
    else:
        print("‚ö†Ô∏è Synchronisation termin√©e avec des erreurs")

    sys.exit(0 if error_count == 0 else 1)

if __name__ == "__main__":
    main()
